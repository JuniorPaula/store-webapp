{{template "base" .}}

{{define "css"}}
    <style>
        #form-container {
            max-width: 500px;
            margin: 0 auto;
            padding: 10px 30px;
            border: 1px solid #ccc;
            margin-top: 80px;
            background-color: #e9ecef;
        }

        #form-container h2,
        #form-container form label {
            font-weight: 600;
        }

        #card-messages {
            position: fixed;
            top: 0;
            right: 0;
            z-index: 9999;
            width: 300px;
            padding: 10px;
            margin: 10px;
            border-radius: 5px;
            color: #fff;
            font-size: 16px;
            font-weight: 600;
            text-align: center;
        }
    </style>
{{end}}

{{define "title"}}
    Terminal virtual
{{end}}

{{define "content"}}
    <div id="card-messages"></div>

    <div id="form-container">
        <h2 class="mt-3 text-center">Terminal virtual</h2>
        <hr />

        <form action="/payment-succeeded" method="post" name="charge_form" id="charge_form" class="d-block needs-validations charge-form" autocomplete="off" novalidate="">
            <div class="mb-3">
                <label for="amount" class="form-label">Valor</label>
                <input type="text" class="form-control" id="amount" name="amount" required autocomplete="amount-new" placeholder="R$ 100,00">
            </div>

            <div class="mb-3">
                <label for="cardholder-name" class="form-label">Nome do titular do cartão</label>
                <input type="text" class="form-control" id="cardholder-name" name="cardholder_name" required autocomplete="cardholder-name-new" placeholder="Jhon Doe">
            </div>

            <div class="mb-3">
                <label for="cardholder-email" class="form-label">Email do titular do cartão</label>
                <input type="email" class="form-control" id="cardholder-email" name="cardholder_email" required autocomplete="cardholder-email-new" placeholder="jhon@email.com">
            </div>

            <div class="mb-3">
                <label for="card-element" class="form-label">Cartão de Crédito</label>
                <div id="card-element" class="form-control"></div>
                <div class="alert-danger text-center" id="card-errors" role="alert"></div>
                <div class="alert-success text-center" id="card-success" role="alert"></div>
            </div>

            <hr />

            <a id="pay-button" href="javascript:void(0)" class="btn btn-primary" onclick="val()">Pagar</a>
            
            <div id="processing-payment" class="text-center d-none">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Processando...</span>
                </div>
            </div>

            <input type="hidden" name="payment_intent" id="payment_intent">
            <input type="hidden" name="payment_method" id="payment_method">
            <input type="hidden" name="payment_amount" id="payment_amount">
            <input type="hidden" name="payment_currency" id="payment_currency">
        </form>
    </div>
{{end}}

{{define "js"}}
    <script src="https://js.stripe.com/v3/"></script>

    <script>
        let card;
        let stripe;

        const cardMessages = document.getElementById('card-messages');
        const payButton = document.getElementById('pay-button');
        const processing = document.getElementById('processing-payment');

        stripe = Stripe("pk_test_51NpZ00JcWFfX1Z09OzrAtIPsd7maru1WRam67uFSXViI8K0O8W3J35A5MBo0ULYWM0s9jPArAj3NycUgFENpSSfs00LCP45q0K")
       
        function hidePayButton() {
            payButton.classList.add('d-none');
            processing.classList.remove('d-none');
        }
        
        function val() {
            let form = document.getElementById('charge_form');
            if (form.checkValidity() === false) {
                this.event.preventDefault();
                this.event.stopPropagation();
                form.classList.add('was-validated');
                return;
            }

            form.classList.add('was-validated');
            hidePayButton();

            let amountToChange = String(parseFloat(document.getElementById('amount').value) * 100);
            
            let payload = {
                amount: amountToChange,
                currency: 'brl',
            }

            const requestOptions = {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(payload)
            };
            
            fetch("http://localhost:4001/api/v1/payment-intent", requestOptions)
                .then(response => response.text())
                .then(response => {
                    let data;
                    try {
                        data = JSON.parse(response);
                        console.log(data);
                    } catch (error) {
                        console.log(error);
                    }
                })
        }

        (function() {
            const elements = stripe.elements();
            const style = {
                base: {
                    fontSize: '16px',
                    lineHeight: '24px'
                }
            };

            card = elements.create('card', { style: style, hidePostalCode: true });
            card.mount('#card-element');

            card.addEventListener('change', function(event) {
                const displayError = document.getElementById('card-errors');
                const displaySuccess = document.getElementById('card-success');

                if (event.error) {
                    displayError.classList.remove('d-none');
                    displayError.textContent = event.error.message;
                    displaySuccess.classList.add('d-none');
                } else {
                    displayError.classList.add('d-none');
                    displaySuccess.textContent = 'Cartão válido';
                }
            });
        })()
    </script>
{{end}}